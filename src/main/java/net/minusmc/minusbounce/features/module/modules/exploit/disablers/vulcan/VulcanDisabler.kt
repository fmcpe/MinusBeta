package net.minusmc.minusbounce.features.module.modules.exploit.disablers.vulcan

import net.minecraft.network.play.client.C07PacketPlayerDigging
import net.minecraft.network.play.client.C0BPacketEntityAction
import net.minecraft.network.play.client.C17PacketCustomPayload
import net.minecraft.util.BlockPos
import net.minecraft.util.EnumFacing
import net.minusmc.minusbounce.event.PacketEvent
import net.minusmc.minusbounce.event.PreMotionEvent
import net.minusmc.minusbounce.features.module.modules.exploit.disablers.DisablerMode
import net.minusmc.minusbounce.utils.BadPacketUtils
import net.minusmc.minusbounce.utils.BlinkUtils
import net.minusmc.minusbounce.utils.PacketUtils
import net.minusmc.minusbounce.value.BoolValue

class VulcanDisabler : DisablerMode("Vulcan") {

    private val sprint = BoolValue("Omni-Sprint",true)
    private val autoClicker = BoolValue("AutoClicker", true)
    private val reach = BoolValue("Reach-(4.5-Block)", true)
    private val movement = BoolValue("Strafe", true)
    private val fastUse = BoolValue("FastUse", true)
    private val delay = BoolValue("Scaffold-Delayed", true)
    private val miscellaneous = BoolValue("Miscellaneous", true)

    override fun onPacket(event: PacketEvent) {
        val packet = event.packet
        if (miscellaneous.get() && packet is C17PacketCustomPayload) {
            event.cancelEvent()
        }
    }

    override fun onPreMotion(event: PreMotionEvent) {
        if (sprint.get()) {
            PacketUtils.sendPacketNoEvent(C0BPacketEntityAction(mc.thePlayer, C0BPacketEntityAction.Action.START_SPRINTING))
            PacketUtils.sendPacketNoEvent(C0BPacketEntityAction(mc.thePlayer, C0BPacketEntityAction.Action.STOP_SPRINTING))
        }
        if (movement.get() && mc.thePlayer.ticksExisted % 5 == 0) {
            PacketUtils.sendPacketNoEvent(C07PacketPlayerDigging(C07PacketPlayerDigging.Action.STOP_DESTROY_BLOCK, BlockPos(mc.thePlayer), EnumFacing.UP))
        }
        if (autoClicker.get() && mc.thePlayer.ticksExisted % 25 == 0) {
            PacketUtils.sendPacketNoEvent(C07PacketPlayerDigging(C07PacketPlayerDigging.Action.START_DESTROY_BLOCK, BlockPos(mc.thePlayer), EnumFacing.DOWN))
        }
        if (fastUse.get() && mc.thePlayer.ticksExisted % 7 == 0) {
            PacketUtils.sendPacketNoEvent(C07PacketPlayerDigging(C07PacketPlayerDigging.Action.DROP_ITEM, BlockPos.ORIGIN, EnumFacing.DOWN))
        }
        if(delay.get() && mc.thePlayer.ticksExisted % 10 == 0 && !mc.gameSettings.keyBindSneak.isKeyDown && mc.currentScreen == null && !BadPacketUtils.bad(false, false, false, true, false) ) {
            PacketUtils.sendPacketNoEvent(C0BPacketEntityAction(mc.thePlayer, C0BPacketEntityAction.Action.START_SNEAKING))
            PacketUtils.sendPacketNoEvent(C0BPacketEntityAction(mc.thePlayer, C0BPacketEntityAction.Action.STOP_SNEAKING))
        }
        if(reach.get()){
            BlinkUtils.setBlinkState(all = true)
            if(mc.thePlayer.ticksExisted % 2 == 0) BlinkUtils.setBlinkState()
        }
    }
}